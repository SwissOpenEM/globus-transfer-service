name: Build and Test
env:
  DOCKER_REGISTRY: ghcr.io
  DOCKER_IMAGE_NAME: ${{ github.repository }}
on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  lint:
    name: Go Linting
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "stable"
      - name: Generate server
        run: go generate ./internal/api
      - name: Go linting (golangci-lint)
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.3
  go_tests:
    strategy:
      fail-fast: false
      matrix:
        build:
          - goos: linux
            goarch: amd64
            os: ubuntu-24.04
          - goos: windows
            goarch: amd64
            os: windows-latest
    runs-on: ${{ matrix.build.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "stable"
      - name: Set up gotestfmt
        uses: gotesttools/gotestfmt-action@v2
      - name: Install dependencies
        run: go get .
      - name: Run go tests
        run: |
          set -euo pipefail
          go test -json -v ./... 2>&1 | tee ./Go-Test-${{ matrix.build.os }}.json | gotestfmt
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: Go Test Result on ${{ matrix.build.goos }} (${{ matrix.build.os }})
          path: ./Go-Test-${{ matrix.build.os }}.json
  build_push_docker_image:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Log into '${{ env.DOCKER_REGISTRY }}' docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get GitHub metadata for Docker tags
        id: github_metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.github_metadata.outputs.tags }}
          labels: ${{ steps.github_metadata.outputs.labels }}
